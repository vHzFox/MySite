{"version":3,"sources":["pages/Home.tsx","pages/About.tsx","pages/Contact.tsx","pages/etc/Sidebar.tsx","pages/projects/ChemCalc.tsx","pages/projects/KallCord.tsx","pages/projects/PTBot.tsx","App.tsx","index.tsx"],"names":["Home","_jsx","children","About","Contact","Sidebar","useEffect","fetch","then","response","text","data","document","getElementById","innerHTML","sidenavToggle","addEventListener","toggleNav","querySelectorAll","forEach","link","closeNav","sidenav","style","left","_jsxs","id","className","onClick","NavLink","to","exact","activeClassName","ChemCalc","href","download","KallCord","projectName","useParams","PTBot","App","Router","Switch","Route","path","component","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.0b037ad6.chunk.js","sourcesContent":["export const Home: React.FC = () => {\n    return <h1>Welcome to My Portfolio</h1>;\n  };","export const About: React.FC = () => {\n    return <h1>About Me</h1>;\n  };","export const Contact: React.FC = () => {\n    return <h1>Contact Me</h1>;\n  };\n  ","import React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"../../styles/Sidebar.Default.css\";\nimport \"../../styles/Sidebar.Projects.css\";\n\nconst Sidebar: React.FC = () => {\n\n  // This effect will handle the dynamic loading and event listeners for toggle\n  useEffect(() => {\n    // Fetch the sidebar HTML content dynamically\n    fetch('sideNav.html')\n      .then((response) => response.text())\n      .then((data) => {\n        // Load the content into the placeholder\n        document.getElementById('side-nav-placeholder')!.innerHTML = data;\n\n        // Attach event listener for the toggle button after content is loaded\n        const sidenavToggle = document.getElementById('sidenav-toggle');\n        if (sidenavToggle) {\n          sidenavToggle.addEventListener('click', toggleNav);\n        }\n\n        // Close the sidebar when a NavLink is clicked\n        const navLinks = document.querySelectorAll('.sidebar a');\n        navLinks.forEach(link => {\n          link.addEventListener('click', closeNav);\n        });\n      });\n  }, []);\n\n  // Toggle the side navigation (open/close)\n  const toggleNav = () => {\n    const sidenav = document.getElementById('sidenav');\n    if (sidenav) {\n      if (sidenav.style.left === '0px') {\n        sidenav.style.left = '-250px'; // Hide the side nav\n      } else {\n        sidenav.style.left = '0px'; // Show the side nav\n      }\n    }\n  };\n\n  // Close the side navigation when a NavLink is clicked\n  const closeNav = () => {\n    const sidenav = document.getElementById('sidenav');\n    if (sidenav) {\n      sidenav.style.left = '-250px'; // Hide the side nav\n    }\n  };\n\n  return (\n    <div>\n      {/* Placeholder where the sidebar will be injected */}\n      <div id=\"side-nav-placeholder\"></div>\n      \n      {/* Your button to toggle sidebar */}\n      <button id=\"sidenav-toggle\" className=\"sidebar-toggle-btn\">\n        &#9776;\n      </button>\n\n      {/* Sidebar content (it will be replaced with content from 'sideNav.html') */}\n      <nav id=\"sidenav\" className=\"sidebar\">\n        {/* Close button */}\n        <button id=\"sidenav-close\" className=\"sidebar-close-btn\" onClick={closeNav}>X</button>\n\n        <div className=\"default-list\">\n          <ul>\n            <h1>Start</h1>\n            <li><NavLink to=\"/\" exact activeClassName=\"active\">Hem</NavLink></li>\n            <li><NavLink to=\"/about\" activeClassName=\"active\">Om mig</NavLink></li>\n            <li><NavLink to=\"/contact\" activeClassName=\"active\">Kontakta mig</NavLink></li>\n          </ul>\n        </div>\n\n        <br />\n        <div className=\"project-list\">\n          <ul>\n            <h1>Mina projekt:</h1>\n            <li><NavLink to=\"/projects/ChemCalc\" activeClassName=\"active\">ChemCalc</NavLink></li>\n            <li><NavLink to=\"/projects/KallCord\" activeClassName=\"active\">KallCord</NavLink></li>\n            <li><NavLink to=\"/projects/PTBot\" activeClassName=\"active\">PTBot</NavLink></li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst ChemCalc: React.FC = () => {\n\n  return (\n    <div className=\"project-detail\">\n      <h1>ChemCalc</h1>\n      <h3><a href=\"/assets/downloads/ChemCalc.zip\" download>Download ChemCalc</a></h3>\n      <p>Detaljer om ChemCalc</p>\n      <h3>\n        ChemCalc är en kemisk kalkylator som kan användas för att beräkna molar massa, koncentration och massa för olika kemiska föreningar.\n      </h3>\n      \n      <h2>Kemi Kalkylatorn (KK)</h2>\n      <p>Författare: Victor Hernandez, León Broberg</p>\n      <p>Klass: TE22</p>\n      <p>Handledare: Mikael Sandell</p>\n\n      <h3>Innehållsförteckning</h3>\n      <ul>\n        <li>Inledning</li>\n        <li>Syfte och frågeställning</li>\n        <li>Bakgrund</li>\n        <li>Tidigare forskning</li>\n        <li>Teori</li>\n        <li>Metod och material</li>\n        <li>Resultat</li>\n        <li>Diskussion</li>\n        <li>Källförteckning</li>\n        <li>Bilagor</li>\n      </ul>\n\n      <h3>1. Inledning</h3>\n      <p>\n        Under kemilektioner används ofta formelhäften eftersom det är svårt att memorera alla formler och processer. Till exempel behövs kunskap om elektronegativitetsvärden för att avgöra bindningstypen mellan atomer, såsom kovalent, polär kovalent eller jonbindning. Även beräkningar av elektronfördelning och molmassa är centrala delar av kemin.\n      </p>\n      <p>\n        Eftersom dessa processer kan vara tidskrävande och förvirrande, uppstod idén att integrera dessa funktioner i en digital applikation. \"Kemi Kalkylatorn\" (KK) syftar till att förenkla kemiska beräkningar genom en lättillgänglig mjukvara, där användaren snabbt kan bestämma bindningstyp och utföra andra nödvändiga beräkningar.\n      </p>\n\n      <h3>2. Syfte och frågeställning</h3>\n      <h4>Syfte</h4>\n      <p>\n        Syftet med detta arbete är att utveckla en applikation som kan fungera som ett komplement till traditionella formelblad och det periodiska systemet. Studien undersöker också hur användbar denna produkt skulle vara för gymnasieelever som läser Kemi 1 och huruvida den kan ersätta befintliga hjälpmedel.\n      </p>\n      <h4>Frågeställningar</h4>\n      <ul>\n        <li>Kan \"Kemi Kalkylatorn\" ersätta formelblad och det periodiska systemet i undervisningen?</li>\n        <li>Varför valde vi att använda Java och senare Electron för utvecklingen?</li>\n        <li>Vilka funktioner skulle göra programmet mer användbart för kemi elever?</li>\n      </ul>\n\n      <h3>3. Bakgrund</h3>\n      <p>\n        Efter att ha upplevt utmaningarna med kemiska beräkningar insåg vi behovet av en lösning som kunde effektivisera dessa processer. För att kombinera vårt intresse för programmering med kemi utvecklade vi \"Kemi Kalkylatorn\" – en applikation som automatiserar beräkningar och hjälper elever att förstå kemiska samband snabbare och enklare.\n      </p>\n\n      <h3>4. Tidigare forskning</h3>\n      <p>\n        För att utveckla \"Kemi Kalkylatorn\" studerade vi befintliga metoder för att beräkna bindningstyper, elektronfördelning och molmassa. Vi granskade:\n      </p>\n      <ul>\n        <li>Existerande verktyg och appar inom kemiundervisning.</li>\n        <li>Tabeller över elektronegativitetsvärden och deras användning.</li>\n        <li>Statistik över hur ofta elever använder formelblad och det periodiska systemet.</li>\n        <li>Studier kring digitala hjälpmedel inom kemiundervisning.</li>\n      </ul>\n\n      <h3>5. Teori</h3>\n      <h4>Viktiga begrepp</h4>\n      <ul>\n        <li>GUI (Graphical User Interface): Det användaren ser och interagerar med under applikationens användning.</li>\n        <li>Elektronnegativitetsvärde: En specifik atoms kapacitet att dra till sig elektroner.</li>\n        <li>Elektronnegativitetsdifferens: Differensen mellan två atomers elektronnegativitetsvärden i en specifik bindning.</li>\n      </ul>\n\n      <h3>6. Metod och material</h3>\n      <p>\n        Vi började med att analysera de kemiska beräkningar vi ville inkludera i applikationen. Första prototypen byggdes i Java, men vi bytte till Electron för att skapa en GUI-baserad applikation.\n      </p>\n\n      <h3>7. Resultat</h3>\n      <p>\n        Den slutliga versionen av \"Kemi Kalkylatorn\" innehåller funktioner för att:\n        <ul>\n          <li>Beräkna bindningstyp baserat på elektronegativitet.</li>\n          <li>Räkna ut molmassa för kemiska föreningar.</li>\n          <li>Visa elektronkonfiguration för grundämnen.</li>\n          <li>Använda ett intuitivt GUI för enkel navigering.</li>\n        </ul>\n      </p>\n\n      <h3>8. Diskussion</h3>\n      <p>\n        Vårt projekt visade att en digital kemikalkylator kan vara ett användbart hjälpmedel för kemiundervisning. Programmet gör beräkningar snabbare och minskar risken för fel vid manuella uträkningar.\n      </p>\n\n      <h3>9. Källförteckning</h3>\n      <ul>\n        <li>Kemi 1 av Magnus Ehinger</li>\n        <li>Iulia Florina Feneriu</li>\n        <li>W3Schools</li>\n        <li>Stack Overflow</li>\n      </ul>\n    </div>\n  );\n};\n\nexport { ChemCalc };\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst KallCord: React.FC = () => {\n  const { projectName } = useParams<{ projectName: string }>();\n\n  return (\n    <div className=\"project-detail\">\n      <h1>{projectName}</h1>\n      <h3>\n        KallCord Är en Discord klon\n      </h3>\n    </div>\n  );\n};\n\nexport { KallCord };\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst PTBot: React.FC = () => {\n  return (\n    <div className=\"project-detail\">\n      <h1>Purple Thunder Bot</h1>\n      <h2>Bio</h2>\n      <h3>\n        Purple Thunder Bot är en discord bot jag har skapat för att göra servrar lite roligare.\n      </h3>\n      <h2>Features</h2>\n        <ul>\n          <li>\n            <h3>/pontus</h3>\n            <h4>Skickar en slumpmässig bild på Pontus</h4>\n          </li>\n          <li>\n            <h3>/musicjoke</h3>\n            <h4>Skickar ett slumpmässigt musikskämt</h4>\n          </li>\n          <li>\n            <h3>/Spam</h3>\n            <h4>Spammar valfri person ett meddelande 0 - 500 antal gånger</h4>\n          </li>\n        </ul>\n\n        <h2>Installation</h2>\n        <h3>\n          <a href=\"https://discord.com/oauth2/authorize?client_id=1348751031785492644\">För att installera Purple Thunder Bot, klicka på denna länk</a>\n        </h3>\n    </div>\n  );\n};\n\nexport { PTBot };\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Contact } from \"./pages/Contact\";\nimport Sidebar from \"./pages/etc/Sidebar\"; \n\n//Project pages\nimport { ChemCalc } from \"./pages/projects/ChemCalc\";\nimport { KallCord } from \"./pages/projects/KallCord\"; \nimport { PTBot } from \"./pages/projects/PTBot\";\n\n\nimport \"./styles/Sidebar.css\";\n\nconst App: React.FC = () => {\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Sidebar /> {/* Sidebar component */}\n\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/projects/ChemCalc\" component={ChemCalc} />\n            <Route path=\"/projects/KallCord\" component={KallCord} />\n            <Route path=\"/projects/PTBot\" component={PTBot} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}